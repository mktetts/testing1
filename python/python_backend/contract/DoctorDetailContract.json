{
  "contractName": "DoctorDetailContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "age",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "qualification",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialist",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct DoctorDetailContract.Doctor",
          "name": "_doctor",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addDoctors",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "age",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "qualification",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialist",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct DoctorDetailContract.Doctor",
          "name": "_doctor",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "deleteDoctors",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "age",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "qualification",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialist",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct DoctorDetailContract.Doctor",
          "name": "_doctor",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "updateDoctors",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "doctor",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "age",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "qualification",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hospital",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialist",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "phone",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "password",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "doctorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "age",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "qualification",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialist",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            }
          ],
          "internalType": "struct DoctorDetailContract.Doctor",
          "name": "_doctor",
          "type": "tuple"
        }
      ],
      "name": "addDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "age",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "qualification",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialist",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            }
          ],
          "internalType": "struct DoctorDetailContract.Doctor",
          "name": "_doctor",
          "type": "tuple"
        }
      ],
      "name": "updateDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "deleteDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDoctors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "age",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "qualification",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialist",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phone",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            }
          ],
          "internalType": "struct DoctorDetailContract.Doctor[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct DoctorDetailContract.Doctor\",\"name\":\"_doctor\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addDoctors\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct DoctorDetailContract.Doctor\",\"name\":\"_doctor\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"deleteDoctors\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct DoctorDetailContract.Doctor\",\"name\":\"_doctor\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"updateDoctors\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"internalType\":\"struct DoctorDetailContract.Doctor\",\"name\":\"_doctor\",\"type\":\"tuple\"}],\"name\":\"addDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"deleteDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doctor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doctorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDoctors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"internalType\":\"struct DoctorDetailContract.Doctor[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"age\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qualification\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialist\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"internalType\":\"struct DoctorDetailContract.Doctor\",\"name\":\"_doctor\",\"type\":\"tuple\"}],\"name\":\"updateDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DoctorDetails.sol\":\"DoctorDetailContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/DoctorDetails.sol\":{\"keccak256\":\"0x046d9950bc8c454a7883d1e8cf581f31a2c7bcd40d1dd85343cc3a9e2a8e3726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://043a07dbe986d1a65544a4bb3cc554fbe0d9ad224742c147869e57caeda0c7f9\",\"dweb:/ipfs/QmWot9gh3N4SfGcrRUSn7GT35CqZgc2EzZ3mkQ7BuS9JVK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "66:1279:0:-:0;;;;;;;131:1;66:1279;;;;;;;;;;;;",
  "deployedSourceMap": "66:1279:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;819:39;66:1279;;;;;;;:::i;:::-;782:11;:21;:11;;;;:::i;:::-;:21;;:::i;:::-;66:1279;;;;;;;;;;;;;;;;;;:::i;:::-;847:10;66:1279;;;;819:39;;;66:1279;;;;;;;;;;;;;;;;;;;;;;;;;1330:6;66:1279;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;389:22;;;;;66:1279;;;;;;389:22;66:1279;;;389:22;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;66:1279;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;389:22;;;66:1279;;;;;;;-1:-1:-1;;66:1279:0;;;;;;1000:11;66:1279;1000:11;;;:::i;:::-;66:1279;;:::i;:::-;;;;;1025:16;;1021:153;66:1279;;;1057:10;;;;:::i;:::-;66:1279;;;;;;;-1:-1:-1;;;66:1279:0;;;;;1212:28;;66:1279;;1212:28;;1229:10;;66:1279;1212:28;:::i;:::-;;;;66:1279;;;;;;;-1:-1:-1;;;;;66:1279:0;;;;1021:153;66:1279;;;;;1114:23;1100:11;66:1279;;;;1114:23;:::i;:::-;1100:11;;;:::i;:::-;66:1279;;;;;;;1021:153;1151:10;;;;:::i;:::-;1021:153;;66:1279;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;66:1279:0;;;;;;;;;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;:::i;:::-;;533:6;66:1279;;;;;;;;;;533:6;66:1279;;;533:6;66:1279;;:::i;:::-;;;;-1:-1:-1;;66:1279:0;;;;-1:-1:-1;533:6:0;66:1279;;;;;591:31;;66:1279;;591:31;;611:10;;66:1279;591:31;:::i;66:1279::-;;;;;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;533:6;66:1279;;;;;;;;533:6;-1:-1:-1;66:1279:0;;;;;-1:-1:-1;66:1279:0;:::o;:::-;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;66:1279:0;;;;-1:-1:-1;66:1279:0;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;66:1279:0;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;-1:-1:-1;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;66:1279:0;;;;;;;;;;;;;;;;;;-1:-1:-1;66:1279:0;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;66:1279:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;1000:6;66:1279;;;;;-1:-1:-1;;66:1279:0;;;;:::i;:::-;;;;;;;;;:::i;:::-;;1000:6;66:1279;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;1000:6;66:1279;:::o;:::-;-1:-1:-1;;;;;66:1279:0;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract DoctorDetailContract {\n    uint256 public doctorCount = 0;\n\n    constructor() {}\n\n    struct Doctor {\n        string name;\n        string age;\n        string email;\n        string qualification;\n        string hospital;\n        string specialist;\n        string phone;\n        string password;\n        \n    }\n\n    Doctor[] public doctor;\n\n    event addDoctors(Doctor _doctor, address account);\n\n    function addDoctor(Doctor memory _doctor) public {\n        doctor.push(_doctor);\n        doctorCount++;\n        emit addDoctors(_doctor, msg.sender);\n    }\n\n    event updateDoctors(uint256 _id, Doctor _doctor, address account);\n\n    function updateDoctor(uint256 _id, Doctor memory _doctor) public {\n        doctor[_id] = _doctor;\n\n        emit updateDoctors(_id, _doctor, msg.sender);\n    }\n\n    event deleteDoctors(Doctor _doctor, address account);\n\n    function deleteDoctor(uint256 _id) public {\n        Doctor memory u = doctor[_id];\n        if (doctorCount == 1) {\n            doctor.pop();\n        } else {\n            doctor[_id] = doctor[doctorCount - 1];\n            doctor.pop();\n        }\n        doctorCount--;\n\n        emit deleteDoctors(u, msg.sender);\n    }\n\n    function getDoctors() public view returns (Doctor[] memory) {\n        return doctor;\n    }\n}\n",
  "sourcePath": "/mnt/hdd/projects/codeshift/sc/contracts/DoctorDetails.sol",
  "ast": {
    "absolutePath": "project:/contracts/DoctorDetails.sol",
    "exportedSymbols": {
      "DoctorDetailContract": [
        155
      ]
    },
    "id": 156,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DoctorDetailContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 155,
        "linearizedBaseContracts": [
          155
        ],
        "name": "DoctorDetailContract",
        "nameLocation": "75:20:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "78522bc4",
            "id": 4,
            "mutability": "mutable",
            "name": "doctorCount",
            "nameLocation": "117:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "102:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "102:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "131:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "153:2:0",
              "statements": []
            },
            "id": 8,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:0"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:0:0"
            },
            "scope": 155,
            "src": "139:16:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "DoctorDetailContract.Doctor",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "192:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "185:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "185:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "age",
                "nameLocation": "213:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "206:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "email",
                "nameLocation": "233:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "226:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 13,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "qualification",
                "nameLocation": "255:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "248:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 15,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "248:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "hospital",
                "nameLocation": "285:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "278:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "278:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "specialist",
                "nameLocation": "310:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "303:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "303:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "phone",
                "nameLocation": "337:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "330:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 21,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "330:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "password",
                "nameLocation": "359:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "352:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 23,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Doctor",
            "nameLocation": "168:6:0",
            "nodeType": "StructDefinition",
            "scope": 155,
            "src": "161:222:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1950e7b6",
            "id": 29,
            "mutability": "mutable",
            "name": "doctor",
            "nameLocation": "405:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "389:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
              "typeString": "struct DoctorDetailContract.Doctor[]"
            },
            "typeName": {
              "baseType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "Doctor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "389:6:0"
                },
                "referencedDeclaration": 25,
                "src": "389:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                  "typeString": "struct DoctorDetailContract.Doctor"
                }
              },
              "id": 28,
              "nodeType": "ArrayTypeName",
              "src": "389:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr",
                "typeString": "struct DoctorDetailContract.Doctor[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "aed56e41599496da628e45c51519ddfc60a04539f237195873fef9354510b0cc",
            "id": 36,
            "name": "addDoctors",
            "nameLocation": "424:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "442:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "435:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                    "typeString": "struct DoctorDetailContract.Doctor"
                  },
                  "typeName": {
                    "id": 31,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "435:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "435:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                      "typeString": "struct DoctorDetailContract.Doctor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "459:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "451:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "434:33:0"
            },
            "src": "418:50:0"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "523:106:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "_doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "545:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        }
                      ],
                      "expression": {
                        "id": 42,
                        "name": "doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "533:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                          "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "533:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr_$_t_struct$_Doctor_$25_storage_$returns$__$bound_to$_t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct DoctorDetailContract.Doctor storage ref[] storage pointer,struct DoctorDetailContract.Doctor storage ref)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "533:20:0"
                },
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "563:13:0",
                    "subExpression": {
                      "id": 48,
                      "name": "doctorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "563:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "563:13:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 52,
                        "name": "_doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "602:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 53,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "611:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "611:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51,
                      "name": "addDoctors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "591:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Doctor_$25_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct DoctorDetailContract.Doctor memory,address)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "591:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "EmitStatement",
                  "src": "586:36:0"
                }
              ]
            },
            "functionSelector": "0c96bf05",
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDoctor",
            "nameLocation": "483:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "507:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "493:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                    "typeString": "struct DoctorDetailContract.Doctor"
                  },
                  "typeName": {
                    "id": 38,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "493:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "493:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                      "typeString": "struct DoctorDetailContract.Doctor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "492:23:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:0"
            },
            "scope": 155,
            "src": "474:155:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8575450a3fa7422490f243f0671d1aa084f2f0416addb2ebba60067a8489e37e",
            "id": 67,
            "name": "updateDoctors",
            "nameLocation": "641:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "663:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "655:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "675:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "668:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                    "typeString": "struct DoctorDetailContract.Doctor"
                  },
                  "typeName": {
                    "id": 62,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "668:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "668:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                      "typeString": "struct DoctorDetailContract.Doctor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "692:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "684:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:46:0"
            },
            "src": "635:66:0"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "772:93:0",
              "statements": [
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 75,
                        "name": "doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "782:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                          "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                        }
                      },
                      "id": 77,
                      "indexExpression": {
                        "id": 76,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "789:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "782:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$25_storage",
                        "typeString": "struct DoctorDetailContract.Doctor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78,
                      "name": "_doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "796:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                        "typeString": "struct DoctorDetailContract.Doctor memory"
                      }
                    },
                    "src": "782:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage",
                      "typeString": "struct DoctorDetailContract.Doctor storage ref"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "782:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "833:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 83,
                        "name": "_doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "838:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "847:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "847:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81,
                      "name": "updateDoctors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "819:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Doctor_$25_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256,struct DoctorDetailContract.Doctor memory,address)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "EmitStatement",
                  "src": "814:44:0"
                }
              ]
            },
            "functionSelector": "d7282bd5",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateDoctor",
            "nameLocation": "716:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "737:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "729:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "756:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "742:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                    "typeString": "struct DoctorDetailContract.Doctor"
                  },
                  "typeName": {
                    "id": 71,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "742:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "742:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                      "typeString": "struct DoctorDetailContract.Doctor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "728:36:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:0"
            },
            "scope": 155,
            "src": "707:158:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "46dcc9f2e6c221b16e99f9939a7ef8f63edf625ac39810e1aad3958927a57c84",
            "id": 96,
            "name": "deleteDoctors",
            "nameLocation": "877:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_doctor",
                  "nameLocation": "898:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "891:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                    "typeString": "struct DoctorDetailContract.Doctor"
                  },
                  "typeName": {
                    "id": 91,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 90,
                      "name": "Doctor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "891:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "891:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                      "typeString": "struct DoctorDetailContract.Doctor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "915:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "907:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:33:0"
            },
            "src": "871:53:0"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "972:275:0",
              "statements": [
                {
                  "assignments": [
                    103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103,
                      "mutability": "mutable",
                      "name": "u",
                      "nameLocation": "996:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "982:15:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                        "typeString": "struct DoctorDetailContract.Doctor"
                      },
                      "typeName": {
                        "id": 102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101,
                          "name": "Doctor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 25,
                          "src": "982:6:0"
                        },
                        "referencedDeclaration": 25,
                        "src": "982:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "baseExpression": {
                      "id": 104,
                      "name": "doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1000:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                        "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                      }
                    },
                    "id": 106,
                    "indexExpression": {
                      "id": 105,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1007:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1000:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Doctor_$25_storage",
                      "typeString": "struct DoctorDetailContract.Doctor storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "982:29:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 108,
                      "name": "doctorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1025:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1040:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1025:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "1086:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 117,
                              "name": "doctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1100:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                                "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                              }
                            },
                            "id": 119,
                            "indexExpression": {
                              "id": 118,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "1107:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1100:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$25_storage",
                              "typeString": "struct DoctorDetailContract.Doctor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 120,
                              "name": "doctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1114:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                                "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 121,
                                "name": "doctorCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4,
                                "src": "1121:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1135:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1121:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1114:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Doctor_$25_storage",
                              "typeString": "struct DoctorDetailContract.Doctor storage ref"
                            }
                          },
                          "src": "1100:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Doctor_$25_storage",
                            "typeString": "struct DoctorDetailContract.Doctor storage ref"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1100:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 127,
                              "name": "doctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1151:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                                "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "1151:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct DoctorDetailContract.Doctor storage ref[] storage pointer)"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 131,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:12:0"
                      }
                    ]
                  },
                  "id": 133,
                  "nodeType": "IfStatement",
                  "src": "1021:153:0",
                  "trueBody": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "1043:37:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 111,
                              "name": "doctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1057:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                                "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "1057:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct DoctorDetailContract.Doctor storage ref[] storage pointer)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1057:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "1057:12:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "1183:13:0",
                    "subExpression": {
                      "id": 134,
                      "name": "doctorCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1183:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:13:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "u",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1226:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 139,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1229:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1229:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Doctor_$25_memory_ptr",
                          "typeString": "struct DoctorDetailContract.Doctor memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 137,
                      "name": "deleteDoctors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "1212:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Doctor_$25_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct DoctorDetailContract.Doctor memory,address)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "EmitStatement",
                  "src": "1207:33:0"
                }
              ]
            },
            "functionSelector": "114db1fd",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteDoctor",
            "nameLocation": "939:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "960:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "952:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:13:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:0"
            },
            "scope": 155,
            "src": "930:317:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1313:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 151,
                    "name": "doctor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "1330:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage",
                      "typeString": "struct DoctorDetailContract.Doctor storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 150,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "1323:13:0"
                }
              ]
            },
            "functionSelector": "b13d5d94",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDoctors",
            "nameLocation": "1262:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:2:0"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1296:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Doctor_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DoctorDetailContract.Doctor[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 147,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 146,
                        "name": "Doctor",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25,
                        "src": "1296:6:0"
                      },
                      "referencedDeclaration": 25,
                      "src": "1296:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Doctor_$25_storage_ptr",
                        "typeString": "struct DoctorDetailContract.Doctor"
                      }
                    },
                    "id": 148,
                    "nodeType": "ArrayTypeName",
                    "src": "1296:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Doctor_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct DoctorDetailContract.Doctor[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1295:17:0"
            },
            "scope": 155,
            "src": "1253:90:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 156,
        "src": "66:1279:0",
        "usedErrors": []
      }
    ],
    "src": "32:1314:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-11-09T13:14:48.392Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}